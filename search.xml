<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>vmware虚拟机配置ubantu20.04静态IP地址</title>
    <url>/2022/06/05/dusm5i/</url>
    <content><![CDATA[<p>vmware 虚拟机配置 ubantu20.04 静态 IP 地址</p>
<p><strong>1. 修改 VMware 虚拟网络编辑器</strong></p>
<p>打开 vmware，点击顶部的“编辑”菜单，打开 ”虚拟化网络编辑器“ 。</p>
<p><img src="/img/pic/2.png#alt="></p>
<p>选中第三个选项 “VMnet8”</p>
<p><img src="/img/pic/3.png#alt="></p>
<p>把 “使用本地 DHCP 服务将 IP 地址分配给虚拟机”   前面的勾去掉，目的是禁止动态给 ubuntu 虚拟机分配 IP 地址，其它地方不用修改。</p>
<p><strong>2. 记录下 VMware 的网关 IP 地址</strong></p>
<p>2.然后点击右边的“NAT 设置(s) … ”按钮。</p>
<p><img src="/img/pic/4.png#alt="></p>
<p>然后一定要把 “网关 IP”里面的 IP 地址 192.168.10.2（这个地方以你电脑上的 vmware 的网关 ip 地址为准）记录下来，在配置 ubuntu 网络服务的时候，网关要配到 192.168.10.2（以你的 wmware 网关 ip 为准）这个 IP 地址。</p>
<p><strong>3. VMware 网络适配器设置（这一步很重要，不然配成静态 ip 地址也不能上网）</strong></p>
<p>依次进入 控制面板 &gt;&gt;   网络和 Internet &gt;&gt; 更改适配器设置，右键 VMware Network Adapter VMnet8</p>
<p><img src="/img/pic/5.png#alt="></p>
<p>在 VMware Network Adapter VMnet8 图标上右键，选属性，然后选择“Internet 协议版本 4(TCP&#x2F;Ipv4)”选项，然后点击 “属性”按钮。</p>
<p><img src="/img/pic/6.png#alt="></p>
<p>然后弹出属性框，可以看到 “使用下面的 IP 地址”下的 IP 地址中的内容，默认为 192.168.10.2，这个 ip 需要更改。</p>
<p>这个 IP 地址跟 VMware 虚拟机里的网关 IP 地址是相同的，产生冲突，所以 ubuntu 虚拟机在查找网关的时候会把 vmware 适配器当作网关，导致找不到真正的 VMware 虚拟机网关。</p>
<p>所以要避开虚拟机网关 IP</p>
<p><img src="/img/pic/7.png#alt="></p>
<p>为了不跟 ubuntu 虚拟机配置的网关 ip 产生冲突，需要将这个 IP 地址改成别的 IP 地址，比如改成 192.168.10.1 或 192.168.10.3</p>
<p>将这个地方的 IP 地址改成 192.168.10.3 或 192.168.10.1，只要不是 192.168.10.2 就行，改后的效果如下图：</p>
<p><img src="/img/pic/8.png#alt="></p>
<p>然后其它地方不用更改，此步骤完成。</p>
<p><strong>4. 设置 ubuntu 虚拟机网络适配器</strong></p>
<p>打开 VMware，在【<strong>我的计算机】</strong>　下选中要配置的 ubuntu 虚拟机，点击【<strong>编辑虚拟机设置】</strong>，在左侧的【<strong>硬件】</strong>栏中选中【<strong>网络适配器】</strong>，选中右侧　【<strong>网络连接】</strong>　中的【 <strong>自定义(U):特定虚拟网络 】</strong>选项，选中下面的 【<strong>VMnet8 (NAT 模式)”】</strong>选项，点击【确定】按钮。</p>
<p><img src="/img/pic/9.png#alt="></p>
<p><img src="/img/pic/10.png#alt="></p>
<p><strong>5. 网络配置文件设置</strong></p>
<p>用 ip addr 命令查看网卡名称，下图可以看出，网卡名称是 ens33，网卡名称以你自己的 ubuntu 系统为准，你的网卡名称可能不是 ens33，有可能是 ens37 这种名称。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip addr</span><br></pre></td></tr></table></figure>

<p><img src="/img/pic/11.png#alt="></p>
<p>修改网络配置文件,网络配置文件存放在&#x2F;etc&#x2F;netplan 目录下，</p>
<p>用 ls 命令查看配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls /etc/netplan</span><br></pre></td></tr></table></figure>

<p><img src="/img/pic/12.png#alt="></p>
<p>从图上可以看出网络配置文件名为：01-network-manager-all.yaml</p>
<p>用 sudo gedit 命令打开 01-network-manager-all.yaml 文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gedit /etc/netplan/01-network-manager-all.yaml</span><br></pre></td></tr></table></figure>

<p>编辑 01-network-manager-all.yaml 文件的内容为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">network:</span><br><span class="line">  version: 2</span><br><span class="line">  renderer: NetworkManager</span><br><span class="line">  ethernets:</span><br><span class="line">    ens33:                      #网卡名，以ubuntu操作系统的网卡名称为准</span><br><span class="line">      dhcp4: no                 #ipv4关闭dhcp，用static模式</span><br><span class="line">      dhcp6: no                 #ip6关闭dhcp</span><br><span class="line">      addresses:</span><br><span class="line">        - 192.168.10.161/24     #本机IP地址</span><br><span class="line">      gateway4: 192.168.10.2    #vmware网关的的IP地址</span><br><span class="line">      nameservers:              #DNS服务器</span><br><span class="line">        addresses: [114.114.114.114, 8.8.8.8, 1.1.1.1]</span><br></pre></td></tr></table></figure>

<p>然后执行 sudo netplan apply 命令编译网络配置，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo netplan apply</span><br></pre></td></tr></table></figure>

<p>此命令用来编译 01-network-manager-all.yaml 文件，编译成功则无任何提示，编译失败会出现错误提示。</p>
<p><strong>[注意]：</strong></p>
<p>此配置文件内容为层级关系，分为 5 级，上级与下级的文本需要右缩进，右缩进至少一个空格，不允许使用 tab，缩进的空格数不重要，只要相同层级的元素左对齐即可；大小写敏感；冒号与后面的值之间需要间隔一个空格，不然编译不过，会报错， 冒号后不带空格会出现下面的错误：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/netplan/01-network-manager-all.yaml:11:7: Invalid YAML: could not find expected &#x27;:&#x27;:</span><br><span class="line">nameservers:</span><br></pre></td></tr></table></figure>

<p><strong>重启系统，验证网络是否通达</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>

<p>执行 reboot 命令重启系统才会生效。</p>
<p>重启后用 ping 命令验证网络是否通达：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping www.baidu.com</span><br></pre></td></tr></table></figure>

<p>搬运于：<a href="https://www.cnblogs.com/yyee/p/12899953.html">vmware 虚拟机配置 ubuntu 18.04(20.04)静态 IP 地址 - 民工黑猫 - 博客园 (cnblogs.com)</a></p>
]]></content>
      <categories>
        <category>环境配置</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubantu</tag>
        <tag>环境配置</tag>
      </tags>
  </entry>
  <entry>
    <title>欢迎来到何之源の小窝</title>
    <url>/2022/06/05/dgkkc2/</url>
    <content><![CDATA[<p><img src="/img/5.jpg#crop=0&crop=0&crop=1&crop=1&id=k8T9p&originalType=binary&ratio=1&rotation=0&showTitle=false&status=done&style=none&title="></p>
<p>只要记住你的名字，不管你在世界的哪个地方。我一定会，去见你。</p>
<p>也许我会忘记你的名字，但是我一辈子都会记得喜欢你的感觉。</p>
]]></content>
      <categories>
        <category>Welcome</category>
      </categories>
      <tags>
        <tag>Welcome</tag>
      </tags>
  </entry>
  <entry>
    <title>Integer缓存(IntegerCache)</title>
    <url>/2022/09/18/wnz573/</url>
    <content><![CDATA[<p>调用的是 Integer.valueOf()方法，代码为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title function_">valueOf</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">        <span class="keyword">assert</span> IntegerCache.high &gt;= <span class="number">127</span>;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)</span><br><span class="line">            <span class="keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Integer</span>(i);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>low 默认是-128，high 默认是 127，因此范围在-128&lt;&#x3D; x &lt;&#x3D; 127 时不用 new,此时的 valueOf 的&#x3D;&#x3D;比较是一致的。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Cache to support the object identity semantics of autoboxing for values between</span></span><br><span class="line"><span class="comment">     * -128 and 127 (inclusive) as required by JLS.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * The cache is initialized on first usage.  The size of the cache</span></span><br><span class="line"><span class="comment">     * may be controlled by the -XX:AutoBoxCacheMax=&lt;size&gt; option.</span></span><br><span class="line"><span class="comment">     * During VM initialization, java.lang.Integer.IntegerCache.high property</span></span><br><span class="line"><span class="comment">     * may be set and saved in the private system properties in the</span></span><br><span class="line"><span class="comment">     * sun.misc.VM class.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">IntegerCache</span> &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">low</span> <span class="operator">=</span> -<span class="number">128</span>;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> high;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">final</span> Integer cache[];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">static</span> &#123;</span><br><span class="line">            <span class="comment">// high value may be configured by property</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">h</span> <span class="operator">=</span> <span class="number">127</span>;</span><br><span class="line">            <span class="type">String</span> <span class="variable">integerCacheHighPropValue</span> <span class="operator">=</span></span><br><span class="line">                sun.misc.VM.getSavedProperty(<span class="string">&quot;java.lang.Integer.IntegerCache.high&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (integerCacheHighPropValue != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> parseInt(integerCacheHighPropValue);</span><br><span class="line">                i = Math.max(i, <span class="number">127</span>);</span><br><span class="line">                <span class="comment">// Maximum array size is Integer.MAX_VALUE</span></span><br><span class="line">                h = Math.min(i, Integer.MAX_VALUE - (-low));</span><br><span class="line">            &#125;</span><br><span class="line">            high = h;</span><br><span class="line"></span><br><span class="line">            cache = <span class="keyword">new</span> <span class="title class_">Integer</span>[(high - low) + <span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> low;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; cache.length; k++)</span><br><span class="line">                cache[k] = <span class="keyword">new</span> <span class="title class_">Integer</span>(j++);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="title function_">IntegerCache</span><span class="params">()</span> &#123;&#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>; k &lt; cache.length; k++)</span><br><span class="line">                cache[k] = <span class="keyword">new</span> <span class="title class_">Integer</span>(j++);</span><br></pre></td></tr></table></figure>

<p>使用一次就会自行创建出 256 个数字。然后按照 i + (-IntegerCache.low)去寻找 cache 数组。</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Jdk源码</tag>
      </tags>
  </entry>
</search>
